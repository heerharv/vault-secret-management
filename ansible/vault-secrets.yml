---
- name: Demonstrate fetching secrets from Vault
  hosts: webservers
  gather_facts: false
  vars:
    vault_addr: "http://127.0.0.1:8200"
    vault_token: "{{ lookup('env', 'VAULT_TOKEN') }}"

  tasks:
    - name: Ensure hvac is installed
      pip:
        name: hvac
        state: present
      delegate_to: localhost
      become: false
      run_once: true

    - name: Retrieve database credentials from Vault
      set_fact:
        db_credentials: "{{ lookup('hashi_vault', 'secret=secret/data/application/database token=' + vault_token + ' url=' + vault_addr) }}"
      no_log: true

    - name: Retrieve API key from Vault
      set_fact:
        api_credentials: "{{ lookup('hashi_vault', 'secret=secret/data/application/api token=' + vault_token + ' url=' + vault_addr) }}"
      no_log: true

    - name: Display retrieved information (for demo only)
      debug:
        msg: "Retrieved credentials for user: {{ db_credentials.data.username }}"

    - name: Create application configuration file
      template:
        src: app_config.j2
        dest: /opt/myapp/config.json
        mode: 0400
      vars:
        db_user: "{{ db_credentials.data.username }}"
        db_password: "{{ db_credentials.data.password }}"
        api_key: "{{ api_credentials.data.api_key }}"
      when: false  # Disabled because this is just for demonstration

    - name: Run application with retrieved secrets
      debug:
        msg: "Application would be started with the retrieved credentials"
